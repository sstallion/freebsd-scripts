#!/bin/sh
#
#

# If there is a global system configuration file, suck it in.
#

newline="
" # A single newline

if [ -r /etc/defaults/periodic.conf ]
then
    . /etc/defaults/periodic.conf
    source_periodic_confs
fi

: ${daily_trim_zfs_default_threshold=35}

case "$daily_trim_zfs_enable" in
    [Yy][Ee][Ss])
	echo
	echo 'Trimming of zfs pools:'

	if [ -z "${daily_trim_zfs_pools}" ]; then
		daily_trim_zfs_pools="$(zpool list -H -o name)"
	fi

	rc=0
	for pool in ${daily_trim_zfs_pools}; do
		# sanity check
		_status=$(zpool list "${pool}" 2> /dev/null)
		if [ $? -ne 0 ]; then
			rc=2
			echo "   WARNING: pool '${pool}' specified in"
			echo "            '/etc/periodic.conf:daily_trim_zfs_pools'"
			echo "            does not exist"
			continue
		fi
		_status=${_status##*$newline}
		case ${_status} in
		*FAULTED*)
			rc=3
			echo "Skipping faulted pool: ${pool}"
			continue ;;
		*UNAVAIL*)
			rc=4
			echo "Skipping unavailable pool: ${pool}"
			continue ;;
		esac

		# determine how many days shall be between trims
		eval _pool_threshold=\${daily_trim_zfs_$(echo "${pool}"|tr  ".:-" "_")_threshold}
		if [ -z "${_pool_threshold}" ];then
			_pool_threshold=${daily_trim_zfs_default_threshold}
		fi

		_last_trim=$(zpool history ${pool} | \
		    egrep "^[0-9\.\:\-]{19} zpool trim ${pool}\$" | tail -1 |\
		    cut -d ' ' -f 1)
		if [ -z "${_last_trim}" ]; then
			# creation time of the pool if no trim was done
			_last_trim=$(zpool history ${pool} | \
			    sed -ne '2s/ .*$//p')
		fi
		if [ -z "${_last_trim}" ]; then
			echo "   skipping trimming of pool '${pool}':"
			echo "      can't get last trimming date"
			continue
		fi

		# Now minus last trim (both in seconds) converted to days.
		_trim_diff=$(expr -e \( $(date +%s) - \
		    $(date -j -v -70M -f %F.%T ${_last_trim} +%s) \) / 60 / 60 / 24)
		if [ ${_trim_diff} -lt ${_pool_threshold} ]; then
			echo "   skipping trimming of pool '${pool}':"
			echo "      last trimming is ${_trim_diff} days ago, threshold is set to ${_pool_threshold} days"
			continue
		fi

		_status="$(zpool status ${pool} | grep scan:)"
		case "${_status}" in
			*"trim in progress"*)
				echo "   trimming of pool '${pool}' already in progress, skipping:"
				;;
			*"resilver in progress"*)
				echo "   resilvering of pool '${pool}' is in progress, skipping:"
				;;
			*"none requested"*)
				echo "   starting first trim (since reboot) of pool '${pool}':"
				zpool trim ${pool}
				[ $rc -eq 0 ] && rc=1
				;;
			*)
				echo "   starting trim of pool '${pool}':"
				zpool trim ${pool}
				[ $rc -eq 0 ] && rc=1
				;;
		esac

		echo "      consult 'zpool status ${pool}' for the result"
	done
	;;

    *)
	rc=0
	;;
esac

exit $rc
